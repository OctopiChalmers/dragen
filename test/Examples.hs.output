GHCi, version 8.2.1: http://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/agustin/.ghci
[1 of 1] Compiling Examples         ( /home/agustin/Source/git/dragen/test/Examples.hs, interpreted )

Reifiying: Examples.Tree

Types involved with Examples.Tree:
[Base Examples.Tree]

Initial frequencies map:
 * (Examples.LeafA,100)
 * (Examples.LeafB,100)
 * (Examples.LeafC,100)
 * (Examples.Node,100)

Predicted distribution for the initial frequencies map:
 * (Examples.LeafA,0.4998372395833333)
 * (Examples.LeafB,0.4998372395833333)
 * (Examples.LeafC,0.4998372395833333)
 * (Examples.Node,0.49951171875)

Optimizing the frequencies map:
******************************************

Optimized frequencies map:
 * (Examples.LeafA,113)
 * (Examples.LeafB,113)
 * (Examples.LeafC,112)
 * (Examples.Node,497)

Predicted distribution for the optimized frequencies map:
 * (Examples.LeafA,5.261312269824188)
 * (Examples.LeafB,5.261312269824188)
 * (Examples.LeafC,5.214751984250523)
 * (Examples.Node,14.737376523898902)

Initial cost: 36.101855500539145
Final cost: 9.025165770966032
Optimization ratio: 4.000132121304503

Deriving optimized generator...
Visiting:Examples.Tree
/home/agustin/Source/git/dragen/test/Examples.hs:40:1-33: Splicing declarations
    dragenArbitrary ''Tree 10 uniform
  ======>
    instance Arbitrary Tree where
      arbitrary
        = sized go_abNv
        where
            go_abNv n_abNw
              = if (n_abNw == 0) then
                    frequency
                      [(113, return LeafA), (113, return LeafB), (112, return LeafC)]
                else
                    frequency
                      [(113, return LeafA), (113, return LeafB), (112, return LeafC),
                       (497, 
                        Node <$> go_abNv ((max 0) (n_abNw - 1))
                          <*> go_abNv ((max 0) (n_abNw - 1)))]

Reifiying: Examples.T1

Types involved with Examples.T1:
[Base Examples.T1,Base Examples.T2]

Initial frequencies map:
 * (Examples.A,100)
 * (Examples.B,100)
 * (Examples.C,100)
 * (Examples.D,100)

Predicted distribution for the initial frequencies map:
 * (Examples.A,1.859375)
 * (Examples.B,1.7724609375)
 * (Examples.C,0.9130859375)
 * (Examples.D,0.859375)

Optimizing the frequencies map:
****************************************************************************************************************************************

Optimized frequencies map:
 * (Examples.A,70)
 * (Examples.B,214)
 * (Examples.C,90)
 * (Examples.D,199)

Predicted distribution for the optimized frequencies map:
 * (Examples.A,8.650325226111388)
 * (Examples.B,13.742023884162)
 * (Examples.C,6.091698658050614)
 * (Examples.D,7.650325226111388)

Initial cost: 30.008520698547365
Final cost: 3.662015566744201
Optimization ratio: 8.194536629244077

Deriving optimized generator...
Visiting:Examples.T1
Visiting:Examples.T2
/home/agustin/Source/git/dragen/test/Examples.hs:73:1-31: Splicing declarations
    dragenArbitrary ''T1 10 uniform
  ======>
    instance Arbitrary T2 where
      arbitrary
        = sized go_ad0Q
        where
            go_ad0Q n_ad0R
              = if (n_ad0R == 0) then
                    return C
                else
                    frequency
                      [(90, return C),
                       (199, D <$> (resize ((max 0) (n_ad0R - 1))) arbitrary)]
    instance Arbitrary T1 where
      arbitrary
        = sized go_ad0S
        where
            go_ad0S n_ad0T
              = if (n_ad0T == 0) then
                    return A
                else
                    frequency
                      [(70, return A),
                       (214, 
                        B <$> go_ad0S ((max 0) (n_ad0T - 1))
                          <*> (resize ((max 0) (n_ad0T - 1))) arbitrary)]

Reifiying: Examples.Rose

Types involved with Examples.Rose:
[Base Examples.Rose,App (Base GHC.Base.Maybe) (Base GHC.Types.Bool),Base GHC.Types.Bool,App (Base GHC.Types.[]) (Base Examples.Rose)]

Initial frequencies map:
 * (GHC.Base.Just,100)
 * (GHC.Base.Nothing,100)
 * (GHC.Types.:,100)
 * (GHC.Types.False,100)
 * (GHC.Types.True,100)
 * (GHC.Types.[],100)
 * (Examples.RLeaf,100)
 * (Examples.RNode,100)

Predicted distribution for the initial frequencies map:
 * (GHC.Base.Just,0.47314453125)
 * (GHC.Base.Nothing,0.47314453125)
 * (GHC.Types.:,0.859375)
 * (GHC.Types.False,0.236572265625)
 * (GHC.Types.True,0.236572265625)
 * (GHC.Types.[],0.9130859375)
 * (Examples.RLeaf,0.9462890625)
 * (Examples.RNode,0.9130859375)

Optimizing the frequencies map:
***************************************************************************************************

Optimized frequencies map:
 * (GHC.Base.Just,302)
 * (GHC.Base.Nothing,95)
 * (GHC.Types.:,415)
 * (GHC.Types.False,100)
 * (GHC.Types.True,100)
 * (GHC.Types.[],2)
 * (Examples.RLeaf,100)
 * (Examples.RNode,101)

Predicted distribution for the optimized frequencies map:
 * (GHC.Base.Just,8.43227331046645)
 * (GHC.Base.Nothing,2.6525363062725584)
 * (GHC.Types.:,16.560942455364646)
 * (GHC.Types.False,4.216136655233225)
 * (GHC.Types.True,4.216136655233225)
 * (GHC.Types.[],6.476132838625638)
 * (Examples.RLeaf,11.084809616739008)
 * (Examples.RNode,6.47613283862564)

Initial cost: 70.2835713982582
Final cost: 19.240719743479303
Optimization ratio: 3.6528556278190876

Deriving optimized generator...
Visiting:Examples.Rose
/home/agustin/Source/git/dragen/test/Examples.hs:99:1-33: Splicing declarations
    dragenArbitrary ''Rose 10 uniform
  ======>
    instance Arbitrary Rose where
      arbitrary
        = sized go_ad7o
        where
            go_ad7o n_ad7p
              = if (n_ad7p == 0) then
                    RLeaf <$> arbitrary
                else
                    frequency
                      [(100, RLeaf <$> arbitrary),
                       (101, 
                        RNode
                          <$>
                            (resize ((max 0) (n_ad7p - 1))) ((Arbitrary.customListGen 2) 415))]

Reifiying: Examples.Tree'

Types involved with Examples.Tree':
[Base Examples.Tree']

Initial frequencies map:
 * (Examples.Leaf,100)
 * (Examples.NodeA,100)
 * (Examples.NodeB,100)

Predicted distribution for the initial frequencies map:
 * (Examples.Leaf,34.51545326762519)
 * (Examples.NodeA,16.757726633812595)
 * (Examples.NodeB,16.757726633812595)

Optimizing the frequencies map:
*************************************************************************

Optimized frequencies map:
 * (Examples.Leaf,60)
 * (Examples.NodeA,98)
 * (Examples.NodeB,31)

Predicted distribution for the optimized frequencies map:
 * (Examples.Leaf,41.13723849786045)
 * (Examples.NodeA,30.491855603025765)
 * (Examples.NodeB,9.64538289483468)

Initial cost: 10.41194705589522
Final cost: 2.0639393601844427e-2
Optimization ratio: 504.4696204138848

Deriving optimized generator...
Visiting:Examples.Tree'
/home/agustin/Source/git/dragen/test/Examples.hs:126:1-64: Splicing declarations
    dragenArbitrary ''Tree' 10 (weighted [('NodeA, 3), ('NodeB, 1)])
  ======>
    instance Arbitrary Tree' where
      arbitrary
        = sized go_adgI
        where
            go_adgI n_adgJ
              = if (n_adgJ == 0) then
                    return Leaf
                else
                    frequency
                      [(60, return Leaf),
                       (98, 
                        NodeA <$> go_adgI ((max 0) (n_adgJ - 1))
                          <*> go_adgI ((max 0) (n_adgJ - 1))),
                       (31, 
                        NodeB <$> go_adgI ((max 0) (n_adgJ - 1))
                          <*> go_adgI ((max 0) (n_adgJ - 1)))]

Reifiying: Examples.Expr

Types involved with Examples.Expr:
[Base Examples.Expr,Base GHC.Types.Char]

Initial frequencies map:
 * (Examples.App,100)
 * (Examples.Lam,100)
 * (Examples.Var,100)
 * (GHC.Types.Char,100)

Predicted distribution for the initial frequencies map:
 * (Examples.App,3.333333333333333)
 * (Examples.Lam,3.333333333333333)
 * (Examples.Var,4.333333333333333)
 * (GHC.Types.Char,7.666666666666666)

Optimizing the frequencies map:
*****************************************************

Optimized frequencies map:
 * (Examples.App,200)
 * (Examples.Lam,69)
 * (Examples.Var,82)
 * (GHC.Types.Char,199)

Predicted distribution for the optimized frequencies map:
 * (Examples.App,29.052261952579133)
 * (Examples.Lam,10.0230303736398)
 * (Examples.Var,30.05226195257913)
 * (GHC.Types.Char,40.07529232621893)

Initial cost: 26.403703703703705
Final cost: 1.4408353391165505e-4
Optimization ratio: 183252.7491995939

Deriving optimized generator...
Visiting:Examples.Expr
/home/agustin/Source/git/dragen/test/Examples.hs:151:1-59: Splicing declarations
    dragenArbitrary ''Expr 10 (weighted [('Var, 3), ('Lam, 1)])
  ======>
    instance Arbitrary Expr where
      arbitrary
        = sized go_adqm
        where
            go_adqm n_adqn
              = if (n_adqn == 0) then
                    Var <$> arbitrary
                else
                    frequency
                      [(82, Var <$> arbitrary),
                       (200, 
                        App <$> go_adqm ((max 0) (n_adqn - 1))
                          <*> go_adqm ((max 0) (n_adqn - 1))),
                       (69, 
                        Lam <$> (resize ((max 0) (n_adqn - 1))) arbitrary
                          <*> go_adqm ((max 0) (n_adqn - 1)))]
Ok, 1 module loaded.
Loaded GHCi configuration from /tmp/ghci26761/ghci-script
Leaving GHCi.
